# Courtney Smith - Snakemake for hess local gencors
# Script started 12-12-2022
# Goal of script: Run HESS local gen cor on Finngen Freeze 10

# run with:
# conda activate snake
# snakemake -s Snakefile_toi --cluster "sbatch --mem {params.memory} -J {params.job_name} -p {params.partition} -c {params.cores} -t {params.run_time}" --jobs 500 --keep-going --rerun-incomplete

import pandas
import os.path
import glob
import math
import itertools

PHENOTYPES_LIST = "/oak/stanford/groups/pritch/users/courtrun/projects/hla/data/hla_traits_custom.txt"
traits = pandas.read_csv(PHENOTYPES_LIST,names=["name"])
traits.set_index("name", inplace=True)

traits2 = pandas.read_csv(PHENOTYPES_LIST,names=["name2"])
traits2.set_index("name2", inplace=True)

LONG_PHENOTYPES_LIST = "/oak/stanford/groups/pritch/users/courtrun/projects/hla/data/hla_traits_custom_pairs1.txt"
longtraits = pandas.read_csv(LONG_PHENOTYPES_LIST,names=["longname"])
longtraits.set_index("longname", inplace=True)

LONG_PHENOTYPES_LIST2 = "/oak/stanford/groups/pritch/users/courtrun/projects/hla/data/hla_traits_custom_pairs2.txt"
longtraits2 = pandas.read_csv(LONG_PHENOTYPES_LIST2,names=["longname2"])
longtraits2.set_index("longname2", inplace=True)

PAIRS_LIST = "/oak/stanford/groups/pritch/users/courtrun/projects/hla/data/hla_traits_custom_pairs.txt"
pairs = pandas.read_csv(PAIRS_LIST,names=["pairs"])
pairs.set_index("pairs", inplace=True)

CHR_LIST = "/oak/stanford/groups/pritch/users/courtrun/projects/hla/data/hla_traits_custom_pairs_chr.txt"
chroms = pandas.read_csv(CHR_LIST,names=["chroms"])
chroms.set_index("chroms", inplace=True)

CHROMS = [str(c) for c in range(1, 23)] # chromosome numbers 1 through 22
BFILE_PREFIX = "/oak/stanford/groups/pritch/projects/nightingale/results/hess/1kg_eur_1pct/1kg_eur_1pct_chr"
PY27 = "source activate py27"
DIR = "/oak/stanford/groups/pritch/users/strausz/finngen_R10_sumstats/"

PLINK="plink" # Remember to run ml biology then ml plink/1.90b5.3 and ml bedtools and ml R before starting
shell.executable("/usr/bin/bash")
shell.prefix("source ~/.bashrc; ")

# The path used for the clumping
CLUMP_BED_PATH="/oak/stanford/groups/pritch/scratch.copy/groups/pritch/nasa/tools/ldsc/1000G_EUR_Phase3_plink/mymerge" # could have issue with matching IDs
# /oak/stanford/groups/pritch/users/nasa/biomarkers/ukb_imp_v3.info03.maf001.reassessment.white_british

rule all:
    input:
        expand(DIR + "hg19/{name}.gz", name=traits.index),
        expand(DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1_trait1_chr{chrom}.prjsq.gz", zip, longname=[str(s) for s in longtraits.index], longname2=[str(t) for t in longtraits2.index], chrom=[str(u) for u in 
chroms.index]),
        expand(DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait2.txt", zip, longname=[str(s) for s in longtraits.index], longname2=[str(t) for t in longtraits2.index]),
        expand(DIR + "hess_local_gc/hg19/step3/{longname}-{longname2}/step3.h2_snps.bed", zip, longname=[str(s) for s in longtraits.index], longname2=[str(t) for t in longtraits2.index]),
        expand(DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2.h2_snps_trait2.bed", zip, longname=[str(s) for s in longtraits.index], longname2=[str(t) for t in longtraits2.index]),
        expand(DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2.h2_snps_trait1.bed", zip, longname=[str(s) for s in longtraits.index], longname2=[str(t) for t in longtraits2.index]),
    params:
        run_time="00:10:00",
        partition="pritch,owners",
        cores="1",
        memory="4G",
        job_name="hess_local_gc"
    output:
        "done.txt"
    shell:
        "touch {output}"

rule munge_for_hess:
    input:
        bim = "/oak/stanford/groups/pritch/scratch.copy/groups/pritch/nasa/tools/ldsc/1000G_EUR_Phase3_plink/mymerge.bim",
        sumstats = DIR + "{name}.gz",
    params:
        run_time="1:00:00",
        cores="22",
        memory="46G",
        partition="pritch,owners",
        job_name="munge_for_hess"
    output:
        DIR + "hg19/{name}.gz"
    shell:
        "Rscript /oak/stanford/groups/pritch/users/courtrun/projects/hla/scripts/convert_hg19.R {input.bim} {input.sumstats} {output}"

rule hess_rg_step1:
    input:
        munged_sumstats1 = DIR + "hg19/{longname}.gz",
        munged_sumstats2 = DIR + "hg19/{longname2}.gz",
        partition = "/oak/stanford/groups/pritch/users/courtrun/software/hess/ldetect-data/EUR/fourier_ls-chr{chrom}.bed", # genome partition file; download from here 
https://bitbucket.org/nygcresearch/ldetect-data/src/ac125e47bf7f/?at=master for relevant ancestry
    params:
        run_time="24:00:00",
        cores="22",
        memory="46G",
        partition="pritch,owners",
        job_name="hess_rg_step1",
        prefix = DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1",
        bfile = BFILE_PREFIX + "{chrom}", # reference panel in PLINK format, 1000 Genomes reference panel can be downloaded from https://huwenboshi.github.io/hess/input_format/
    output:
        DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1_chr{chrom}.eig.gz",
        DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1_chr{chrom}.prjprod.gz",
        DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1_trait1_chr{chrom}.prjsq.gz",
        DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1_trait2_chr{chrom}.prjsq.gz",
    shell:
        "{PY27}; python /oak/stanford/groups/pritch/projects/nightingale/results/court_hess_attempt/hess-0.5.3-beta/hess.py --local-rhog {input.munged_sumstats1} {input.munged_sumstats2} --chrom {wildcards.chrom} --bfile 
{params.bfile} --partition {input.partition} --out {params.prefix}"

rule hess_rg_step2:
    input:
        trait1 = DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1_trait1_chr22.prjsq.gz",
    params:
        run_time="2:00:00",
        cores="2",
        memory="4G",
        partition="pritch,owners",
        job_name="hess_rg_step2",
        prefix_in = DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1",
        prefix_out = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2",
    output:
        trait1 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait1.txt",
        trait2 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait2.txt",
    shell:
        "{PY27}; python /oak/stanford/groups/pritch/projects/nightingale/results/court_hess_attempt/hess-0.5.3-beta/hess.py --prefix {params.prefix_in}_trait1 --out {params.prefix_out}_trait1;"
        "python /oak/stanford/groups/pritch/projects/nightingale/results/court_hess_attempt/hess-0.5.3-beta/hess.py --prefix {params.prefix_in}_trait2 --out {params.prefix_out}_trait2"

# Make file with each trait pair pheno correlation from ldsc gen cor
rule prep_for_hess3b:
    input:
        combined1 = DIR + "gencor/results/combined_gen_cor_sumstats.txt",
    params:
        run_time="1:00:00",
        cores="1",
        memory="4G",
        partition="pritch,owners",
        job_name="prep_for_hess3b",
    output:
        DIR + "gencor/results/combined_gen_cor_sumstats_forhess.txt",
    shell:
        "Rscript /oak/stanford/groups/pritch/users/courtrun/projects/hla/scripts/combine_gc_hess.R {input.combined1} {output}"

rule hess_rg_step3:
    input:
        trait1 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait1.txt",
        trait2 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait2.txt",
        ldsc = DIR + "gencor/results/combined_gen_cor_sumstats_forhess.txt",
    params:
        run_time="2:00:00",
        cores="2",
        memory="4G",
        partition="pritch,owners",
        job_name="hess_rg_step3",
        prefix_in = DIR + "hess_local_gc/hg19/step1/{longname}-{longname2}/step1",
        prefix_out = DIR + "hess_local_gc/hg19/step3/{longname}-{longname2}/step3",
    output:
        DIR + "hess_local_gc/hg19/step3/{longname}-{longname2}/step3.txt",
    shell:
        "grep '^{wildcards.longname}\t{wildcards.longname2}\t' {input.ldsc} | cut -f 4 | while read pheno_cor; do "
        "{PY27}; python /oak/stanford/groups/pritch/projects/nightingale/results/court_hess_attempt/hess-0.5.3-beta/hess.py --local-hsqg-est {input.trait1} {input.trait2} --prefix {params.prefix_in} --num-shared 412181 
--pheno-cor $pheno_cor --out {params.prefix_out}; done"

rule step2_to_bed:
    input:
        step2_t1 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait1.txt",
        step2_t2 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2_trait2.txt",
    params:
        run_time="2:00:00",
        cores="2",
        memory="4G",
        partition="pritch,owners",
        job_name="step2_to_bed",
    output:
        step2_t1 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2.h2_snps_trait1.bed",
        step2_t2 = DIR + "hess_local_gc/hg19/step2/{longname}-{longname2}/step2.h2_snps_trait2.bed",
    shell:
        "bash /oak/stanford/groups/pritch/users/courtrun/projects/hla/scripts/step2_to_bed.sh {input.step2_t1} {input.step2_t2} {output.step2_t1} {output.step2_t2};"

rule step3_to_bed:
    input:
        step3 = DIR + "hess_local_gc/hg19/step3/{longname}-{longname2}/step3.txt",
    params:
        run_time="2:00:00",
        cores="2",
        memory="4G",
        partition="pritch,owners",
        job_name="step3_to_bed",
    output:
        step3 = DIR + "hess_local_gc/hg19/step3/{longname}-{longname2}/step3.h2_snps.bed",
    shell:
        "bash /oak/stanford/groups/pritch/users/courtrun/projects/hla/scripts/step3_to_bed.sh {input.step3} {output.step3};"
